{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"OPERACIÓN BYTESTORM\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Lista de Operativos\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Lista de Misiones\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Lista de Equipos\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CrudForm = _resolveComponent(\"CrudForm\");\n  const _component_OperativosList = _resolveComponent(\"OperativosList\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_MisionesList = _resolveComponent(\"MisionesList\");\n  const _component_EquiposList = _resolveComponent(\"EquiposList\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_hoisted_1, _createCommentVNode(\" Componente CRUD para agregar nuevos datos o editar \"), _createVNode(_component_CrudForm, {\n      onDataSaved: $setup.fetchEquipos,\n      \"equipo-seleccionado\": $setup.equipoSeleccionado\n    }, null, 8 /* PROPS */, [\"onDataSaved\", \"equipo-seleccionado\"]), _hoisted_2, _createVNode(_component_OperativosList, {\n      operativos: $setup.operativos\n    }, null, 8 /* PROPS */, [\"operativos\"]), _createVNode(_component_v_divider, {\n      class: \"my-5\"\n    }), _hoisted_3, _createVNode(_component_MisionesList, {\n      misiones: $setup.misionesFiltradas\n    }, null, 8 /* PROPS */, [\"misiones\"]), _createVNode(_component_v_divider, {\n      class: \"my-5\"\n    }), _hoisted_4, _createVNode(_component_EquiposList, {\n      equipos: $setup.equipos,\n      onEdit: $setup.handleEditEquipo\n    }, null, 8 /* PROPS */, [\"equipos\", \"onEdit\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","default","_withCtx","_hoisted_1","_createCommentVNode","_createVNode","_component_CrudForm","onDataSaved","$setup","fetchEquipos","equipoSeleccionado","_hoisted_2","_component_OperativosList","operativos","_component_v_divider","class","_hoisted_3","_component_MisionesList","misiones","misionesFiltradas","_hoisted_4","_component_EquiposList","equipos","onEdit","handleEditEquipo","_"],"sources":["E:\\SmartWay\\Operacion_ByteStorm\\OperacionFrontEnd2\\bytestormfrontend\\src\\components\\MainList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>OPERACIÓN BYTESTORM</h1>\r\n\r\n    <!-- Componente CRUD para agregar nuevos datos o editar -->\r\n    <CrudForm \r\n      @data-saved=\"fetchEquipos\" \r\n      :equipo-seleccionado=\"equipoSeleccionado\" \r\n    />\r\n\r\n    <h2>Lista de Operativos</h2>\r\n    <OperativosList :operativos=\"operativos\" />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <h2>Lista de Misiones</h2>\r\n    <MisionesList :misiones=\"misionesFiltradas\" />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <h2>Lista de Equipos</h2>\r\n    <EquiposList :equipos=\"equipos\" @edit=\"handleEditEquipo\" />\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport OperativosList from './OperativosList.vue';\r\nimport MisionesList from './MisionesList.vue';\r\nimport EquiposList from './EquiposList.vue';\r\nimport CrudForm from './CrudForm.vue';\r\n\r\nexport default {\r\n  name: \"MainList\",\r\n  components: {\r\n    OperativosList,\r\n    MisionesList,\r\n    EquiposList,\r\n    CrudForm\r\n  },\r\n  setup() {\r\n    const operativos = ref([]);\r\n    const misiones = ref([]);\r\n    const equipos = ref([]);\r\n    const equipoSeleccionado = ref(null); // Para guardar el equipo a editar\r\n\r\n    const misionesFiltradas = computed(() => {\r\n      return operativos.value\r\n        .filter((operativo) => operativo.misiones && operativo.misiones.length > 0)\r\n        .flatMap((operativo) =>\r\n          operativo.misiones.map((mision) => ({\r\n            ...mision,\r\n            operativo,\r\n          }))\r\n        );\r\n    });\r\n\r\n    const fetchOperativos = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\r\n        operativos.value = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchMisiones = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/mision\");\r\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\r\n        misiones.value = await response.json();\r\n\r\n        operativos.value.forEach((operativo) => {\r\n          operativo.misiones = misiones.value.filter((mision) => mision.operativoID === operativo.id);\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchEquipos = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/equipo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los equipos\");\r\n        equipos.value = await response.json();\r\n\r\n        equipos.value = equipos.value.map((equipo) => {\r\n          const mision = misiones.value.find((m) => m.codigo === equipo.misionID);\r\n          return { ...equipo, mision };\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    // Método para manejar la edición de un equipo\r\n    const handleEditEquipo = (equipo) => {\r\n      equipoSeleccionado.value = equipo;\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchOperativos();\r\n      fetchMisiones();\r\n      fetchEquipos();\r\n    });\r\n\r\n    return {\r\n      operativos,\r\n      misionesFiltradas,\r\n      equipos,\r\n      equipoSeleccionado,\r\n      fetchEquipos,\r\n      handleEditEquipo\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEIA,mBAAA,CAA4B,YAAxB,qBAAmB;gCAQvBA,mBAAA,CAA4B,YAAxB,qBAAmB;gCAKvBA,mBAAA,CAA0B,YAAtB,mBAAiB;gCAKrBA,mBAAA,CAAyB,YAArB,kBAAgB;;;;;;;;uBAnBtBC,YAAA,CAqBcC,sBAAA;IAtBhBC,OAAA,EAAAC,QAAA,CAEI,MAA4B,CAA5BC,UAA4B,EAE5BC,mBAAA,wDAA2D,EAC3DC,YAAA,CAGEC,mBAAA;MAFCC,WAAU,EAAEC,MAAA,CAAAC,YAAY;MACxB,qBAAmB,EAAED,MAAA,CAAAE;qEAGxBC,UAA4B,EAC5BN,YAAA,CAA2CO,yBAAA;MAA1BC,UAAU,EAAEL,MAAA,CAAAK;IAAU,yCAEvCR,YAAA,CAAoCS,oBAAA;MAAzBC,KAAK,EAAC;IAAM,IAEvBC,UAA0B,EAC1BX,YAAA,CAA8CY,uBAAA;MAA/BC,QAAQ,EAAEV,MAAA,CAAAW;IAAiB,uCAE1Cd,YAAA,CAAoCS,oBAAA;MAAzBC,KAAK,EAAC;IAAM,IAEvBK,UAAyB,EACzBf,YAAA,CAA2DgB,sBAAA;MAA7CC,OAAO,EAAEd,MAAA,CAAAc,OAAO;MAAGC,MAAI,EAAEf,MAAA,CAAAgB;;IArB3CC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}