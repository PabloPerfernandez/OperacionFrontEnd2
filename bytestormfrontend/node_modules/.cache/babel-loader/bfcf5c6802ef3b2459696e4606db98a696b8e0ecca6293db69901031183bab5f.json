{"ast":null,"code":"import CrudForm from '@/components/CrudForm.vue';\nexport default {\n  components: {\n    CrudForm\n  },\n  data() {\n    return {\n      operativos: [],\n      selectedOperativo: {},\n      isEditing: false,\n      operativoFields: [{\n        name: 'nombre',\n        label: 'Nombre',\n        rules: [v => !!v || 'El nombre es requerido']\n      }, {\n        name: 'rol',\n        label: 'Rol',\n        rules: [v => !!v || 'El rol es requerido']\n      }]\n    };\n  },\n  mounted() {\n    this.fetchOperativos();\n  },\n  methods: {\n    async fetchOperativos() {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\n        this.operativos = await response.json();\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    handleSubmit(data) {\n      if (this.isEditing) {\n        this.updateOperativo(data);\n      } else {\n        this.createOperativo(data);\n      }\n    },\n    handleCancel() {\n      this.selectedOperativo = {};\n      this.isEditing = false;\n    },\n    editOperativo(operativo) {\n      this.selectedOperativo = {\n        ...operativo\n      };\n      this.isEditing = true;\n    },\n    async createOperativo(data) {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/operativo\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (response.ok) {\n          this.fetchOperativos();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    async updateOperativo(data) {\n      try {\n        const response = await fetch(`http://localhost:5056/api/operativo/${data.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (response.ok) {\n          this.fetchOperativos();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    async deleteOperativo(id) {\n      try {\n        const response = await fetch(`http://localhost:5056/api/operativo/${id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          this.fetchOperativos();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["CrudForm","components","data","operativos","selectedOperativo","isEditing","operativoFields","name","label","rules","v","mounted","fetchOperativos","methods","response","fetch","ok","Error","json","error","console","handleSubmit","updateOperativo","createOperativo","handleCancel","editOperativo","operativo","method","headers","body","JSON","stringify","id","deleteOperativo"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\OperativoList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>Lista de Operativos</h1>\r\n\r\n    <!-- Formulario CRUD para Operativos -->\r\n    <crud-form\r\n      :entityName=\"'Operativo'\"\r\n      :formFields=\"operativoFields\"\r\n      :initialData=\"selectedOperativo\"\r\n      :isEditing=\"isEditing\"\r\n      @submit=\"handleSubmit\"\r\n      @cancel=\"handleCancel\"\r\n    />\r\n\r\n    <!-- Mostrar operativos en tarjetas -->\r\n    <v-row v-if=\"operativos.length > 0\" dense>\r\n      <v-col\r\n        v-for=\"operativo in operativos\"\r\n        :key=\"operativo.id\"\r\n        cols=\"12\"\r\n        sm=\"6\"\r\n        md=\"4\"\r\n      >\r\n        <v-card outlined>\r\n          <v-card-title>\r\n            Operativo ID: {{ operativo.id }}\r\n          </v-card-title>\r\n          <v-card-subtitle>\r\n            Nombre: {{ operativo.nombre }}\r\n          </v-card-subtitle>\r\n          <v-card-text>\r\n            Rol: {{ operativo.rol }}\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-btn color=\"primary\" @click=\"editOperativo(operativo)\">Editar</v-btn>\r\n            <v-btn color=\"error\" @click=\"deleteOperativo(operativo.id)\">Eliminar</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport CrudForm from '@/components/CrudForm.vue';\r\n\r\nexport default {\r\n  components: {\r\n    CrudForm,\r\n  },\r\n  data() {\r\n    return {\r\n      operativos: [],\r\n      selectedOperativo: {},\r\n      isEditing: false,\r\n      operativoFields: [\r\n        { name: 'nombre', label: 'Nombre', rules: [v => !!v || 'El nombre es requerido'] },\r\n        { name: 'rol', label: 'Rol', rules: [v => !!v || 'El rol es requerido'] },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchOperativos();\r\n  },\r\n  methods: {\r\n    async fetchOperativos() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\r\n        this.operativos = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    handleSubmit(data) {\r\n      if (this.isEditing) {\r\n        this.updateOperativo(data);\r\n      } else {\r\n        this.createOperativo(data);\r\n      }\r\n    },\r\n    handleCancel() {\r\n      this.selectedOperativo = {};\r\n      this.isEditing = false;\r\n    },\r\n    editOperativo(operativo) {\r\n      this.selectedOperativo = { ...operativo };\r\n      this.isEditing = true;\r\n    },\r\n    async createOperativo(data) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/operativo\", {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(data),\r\n        });\r\n        if (response.ok) {\r\n          this.fetchOperativos();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async updateOperativo(data) {\r\n      try {\r\n        const response = await fetch(`http://localhost:5056/api/operativo/${data.id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(data),\r\n        });\r\n        if (response.ok) {\r\n          this.fetchOperativos();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async deleteOperativo(id) {\r\n      try {\r\n        const response = await fetch(`http://localhost:5056/api/operativo/${id}`, {\r\n          method: 'DELETE',\r\n        });\r\n        if (response.ok) {\r\n          this.fetchOperativos();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}