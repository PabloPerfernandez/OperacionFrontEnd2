{"ast":null,"code":"export default {\n  data() {\n    return {\n      formData: {\n        tipo: '',\n        // 'Operativo', 'Misión', 'Equipo'\n        operativoID: '',\n        // Para Operativo\n        nombre: '',\n        rol: '',\n        // Para Operativo\n        misionAsignada: '',\n        // Para Operativo\n        misionCodigo: '',\n        // Para Misión\n        equipoID: '' // Para Equipo\n      },\n      misiones: [] // Aquí puedes cargar las misiones disponibles\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        let apiUrl = '';\n        if (this.formData.tipo === 'Operativo') {\n          apiUrl = 'http://localhost:5056/api/operativo/crear';\n        } else if (this.formData.tipo === 'Misión') {\n          apiUrl = 'http://localhost:5056/api/mision/crear';\n        } else if (this.formData.tipo === 'Equipo') {\n          apiUrl = 'http://localhost:5056/api/equipo/crear';\n        }\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            // Datos comunes\n            nombre: this.formData.nombre,\n            // Datos específicos según el tipo de entrada\n            ...(this.formData.tipo === 'Operativo' && {\n              operativoID: this.formData.operativoID,\n              rol: this.formData.rol,\n              misionAsignada: this.formData.misionAsignada\n            }),\n            ...(this.formData.tipo === 'Misión' && {\n              misionCodigo: this.formData.misionCodigo\n            }),\n            ...(this.formData.tipo === 'Equipo' && {\n              equipoID: this.formData.equipoID\n            })\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Error al guardar los datos');\n        }\n        this.$emit('data-saved');\n        this.resetForm();\n      } catch (error) {\n        console.error('Error al guardar los datos:', error);\n      }\n    },\n    resetForm() {\n      this.formData = {\n        tipo: '',\n        operativoID: '',\n        nombre: '',\n        rol: '',\n        misionAsignada: '',\n        misionCodigo: '',\n        equipoID: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","formData","tipo","operativoID","nombre","rol","misionAsignada","misionCodigo","equipoID","misiones","methods","submitForm","apiUrl","response","fetch","method","headers","body","JSON","stringify","ok","Error","$emit","resetForm","error","console"],"sources":["E:\\SmartWay\\Operacion_ByteStorm\\OperacionFrontEnd2\\bytestormfrontend\\src\\components\\CrudForm.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-form @submit.prevent=\"submitForm\">\r\n      <!-- Campo común para el tipo de entrada -->\r\n      <v-select\r\n        v-model=\"formData.tipo\"\r\n        :items=\"['Operativo', 'Misión', 'Equipo']\"\r\n        label=\"Tipo de Entrada\"\r\n        required\r\n      ></v-select>\r\n\r\n      <!-- Campos específicos para Operativo -->\r\n      <template v-if=\"formData.tipo === 'Operativo'\">\r\n        <v-text-field\r\n          v-model=\"formData.operativoID\"\r\n          label=\"ID del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.rol\"\r\n          label=\"Rol del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-select\r\n          v-model=\"formData.misionAsignada\"\r\n          :items=\"misiones\"\r\n          label=\"Misión Asignada\"\r\n          required\r\n        ></v-select>\r\n      </template>\r\n\r\n      <!-- Campos específicos para Misión -->\r\n      <template v-if=\"formData.tipo === 'Misión'\">\r\n        <v-text-field\r\n          v-model=\"formData.misionCodigo\"\r\n          label=\"Código de Misión\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre de la Misión\"\r\n          required\r\n        ></v-text-field>\r\n      </template>\r\n\r\n      <!-- Campos específicos para Equipo -->\r\n      <template v-if=\"formData.tipo === 'Equipo'\">\r\n        <v-text-field\r\n          v-model=\"formData.equipoID\"\r\n          label=\"ID del Equipo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre del Equipo\"\r\n          required\r\n        ></v-text-field>\r\n      </template>\r\n\r\n      <!-- Botón de enviar -->\r\n      <v-btn type=\"submit\" color=\"primary\">Guardar</v-btn>\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        tipo: '', // 'Operativo', 'Misión', 'Equipo'\r\n        operativoID: '', // Para Operativo\r\n        nombre: '',\r\n        rol: '', // Para Operativo\r\n        misionAsignada: '', // Para Operativo\r\n        misionCodigo: '', // Para Misión\r\n        equipoID: '', // Para Equipo\r\n      },\r\n      misiones: [], // Aquí puedes cargar las misiones disponibles\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        let apiUrl = '';\r\n\r\n        if (this.formData.tipo === 'Operativo') {\r\n          apiUrl = 'http://localhost:5056/api/operativo/crear';\r\n        } else if (this.formData.tipo === 'Misión') {\r\n          apiUrl = 'http://localhost:5056/api/mision/crear';\r\n        } else if (this.formData.tipo === 'Equipo') {\r\n          apiUrl = 'http://localhost:5056/api/equipo/crear';\r\n        }\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            // Datos comunes\r\n            nombre: this.formData.nombre,\r\n            // Datos específicos según el tipo de entrada\r\n            ...(this.formData.tipo === 'Operativo' && {\r\n              operativoID: this.formData.operativoID,\r\n              rol: this.formData.rol,\r\n              misionAsignada: this.formData.misionAsignada,\r\n            }),\r\n            ...(this.formData.tipo === 'Misión' && { misionCodigo: this.formData.misionCodigo }),\r\n            ...(this.formData.tipo === 'Equipo' && { equipoID: this.formData.equipoID }),\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error al guardar los datos');\r\n        }\r\n\r\n        this.$emit('data-saved');\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error('Error al guardar los datos:', error);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.formData = {\r\n        tipo: '',\r\n        operativoID: '',\r\n        nombre: '',\r\n        rol: '',\r\n        misionAsignada: '',\r\n        misionCodigo: '',\r\n        equipoID: '',\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AA4EA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,IAAI,EAAE,EAAE;QAAE;QACVC,WAAW,EAAE,EAAE;QAAE;QACjBC,MAAM,EAAE,EAAE;QACVC,GAAG,EAAE,EAAE;QAAE;QACTC,cAAc,EAAE,EAAE;QAAE;QACpBC,YAAY,EAAE,EAAE;QAAE;QAClBC,QAAQ,EAAE,EAAE,CAAE;MAChB,CAAC;MACDC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,IAAIC,MAAK,GAAI,EAAE;QAEf,IAAI,IAAI,CAACX,QAAQ,CAACC,IAAG,KAAM,WAAW,EAAE;UACtCU,MAAK,GAAI,2CAA2C;QACtD,OAAO,IAAI,IAAI,CAACX,QAAQ,CAACC,IAAG,KAAM,QAAQ,EAAE;UAC1CU,MAAK,GAAI,wCAAwC;QACnD,OAAO,IAAI,IAAI,CAACX,QAAQ,CAACC,IAAG,KAAM,QAAQ,EAAE;UAC1CU,MAAK,GAAI,wCAAwC;QACnD;QAEA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACF,MAAM,EAAE;UACnCG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB;YACAf,MAAM,EAAE,IAAI,CAACH,QAAQ,CAACG,MAAM;YAC5B;YACA,IAAI,IAAI,CAACH,QAAQ,CAACC,IAAG,KAAM,WAAU,IAAK;cACxCC,WAAW,EAAE,IAAI,CAACF,QAAQ,CAACE,WAAW;cACtCE,GAAG,EAAE,IAAI,CAACJ,QAAQ,CAACI,GAAG;cACtBC,cAAc,EAAE,IAAI,CAACL,QAAQ,CAACK;YAChC,CAAC,CAAC;YACF,IAAI,IAAI,CAACL,QAAQ,CAACC,IAAG,KAAM,QAAO,IAAK;cAAEK,YAAY,EAAE,IAAI,CAACN,QAAQ,CAACM;YAAa,CAAC,CAAC;YACpF,IAAI,IAAI,CAACN,QAAQ,CAACC,IAAG,KAAM,QAAO,IAAK;cAAEM,QAAQ,EAAE,IAAI,CAACP,QAAQ,CAACO;YAAS,CAAC;UAC7E,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QAEA,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC;QACxB,IAAI,CAACC,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDD,SAASA,CAAA,EAAG;MACV,IAAI,CAACtB,QAAO,GAAI;QACdC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,EAAE;QACVC,GAAG,EAAE,EAAE;QACPC,cAAc,EAAE,EAAE;QAClBC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE;MACZ,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}