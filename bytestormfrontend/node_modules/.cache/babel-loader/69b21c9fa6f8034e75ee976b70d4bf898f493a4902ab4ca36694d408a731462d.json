{"ast":null,"code":"import CrudForm from '@/components/CrudForm.vue';\nexport default {\n  components: {\n    CrudForm\n  },\n  data() {\n    return {\n      misiones: [],\n      selectedMision: {},\n      isEditing: false,\n      misionFields: [{\n        name: 'codigo',\n        label: 'Código',\n        rules: [v => !!v || 'El código es requerido']\n      }, {\n        name: 'descripcion',\n        label: 'Descripción',\n        rules: [v => !!v || 'La descripción es requerida']\n      }]\n    };\n  },\n  mounted() {\n    this.fetchMisiones();\n  },\n  methods: {\n    async fetchMisiones() {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/mision\");\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\n        this.misiones = await response.json();\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    handleSubmit(data) {\n      if (this.isEditing) {\n        this.updateMision(data);\n      } else {\n        this.createMision(data);\n      }\n    },\n    handleCancel() {\n      this.selectedMision = {};\n      this.isEditing = false;\n    },\n    editMision(mision) {\n      this.selectedMision = {\n        ...mision\n      };\n      this.isEditing = true;\n    },\n    async createMision(data) {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/mision\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (response.ok) {\n          this.fetchMisiones();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    async updateMision(data) {\n      try {\n        const response = await fetch(`http://localhost:5056/api/mision/${data.codigo}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (response.ok) {\n          this.fetchMisiones();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    async deleteMision(codigo) {\n      try {\n        const response = await fetch(`http://localhost:5056/api/mision/${codigo}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          this.fetchMisiones();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["CrudForm","components","data","misiones","selectedMision","isEditing","misionFields","name","label","rules","v","mounted","fetchMisiones","methods","response","fetch","ok","Error","json","error","console","handleSubmit","updateMision","createMision","handleCancel","editMision","mision","method","headers","body","JSON","stringify","codigo","deleteMision"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\Misiones.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>Lista de Misiones</h1>\r\n\r\n    <!-- CRUD para Misiones -->\r\n    <crud-form\r\n      :entityName=\"'Misión'\"\r\n      :formFields=\"misionFields\"\r\n      :initialData=\"selectedMision\"\r\n      :isEditing=\"isEditing\"\r\n      @submit=\"handleSubmit\"\r\n      @cancel=\"handleCancel\"\r\n    />\r\n\r\n    <!-- Tarjetas Misiones -->\r\n    <v-row v-if=\"misiones.length > 0\" dense>\r\n      <v-col\r\n        v-for=\"mision in misiones\"\r\n        :key=\"mision.codigo\"\r\n        cols=\"12\"\r\n        sm=\"6\"\r\n        md=\"4\"\r\n      >\r\n        <v-card outlined>\r\n          <v-card-title>\r\n            Misión Código: {{ mision.codigo }}\r\n          </v-card-title>\r\n          <v-card-text>\r\n            Descripción: {{ mision.descripcion }}\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-btn color=\"primary\" @click=\"editMision(mision)\">Editar</v-btn>\r\n            <v-btn color=\"error\" @click=\"deleteMision(mision.codigo)\">Eliminar</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport CrudForm from '@/components/CrudForm.vue';\r\n\r\nexport default {\r\n  components: {\r\n    CrudForm,\r\n  },\r\n  data() {\r\n    return {\r\n      misiones: [],\r\n      selectedMision: {},\r\n      isEditing: false,\r\n      misionFields: [\r\n        { name: 'codigo', label: 'Código', rules: [v => !!v || 'El código es requerido'] },\r\n        { name: 'descripcion', label: 'Descripción', rules: [v => !!v || 'La descripción es requerida'] },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchMisiones();\r\n  },\r\n  methods: {\r\n    async fetchMisiones() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/mision\");\r\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\r\n        this.misiones = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    handleSubmit(data) {\r\n      if (this.isEditing) {\r\n        this.updateMision(data);\r\n      } else {\r\n        this.createMision(data);\r\n      }\r\n    },\r\n    handleCancel() {\r\n      this.selectedMision = {};\r\n      this.isEditing = false;\r\n    },\r\n    editMision(mision) {\r\n      this.selectedMision = { ...mision };\r\n      this.isEditing = true;\r\n    },\r\n    async createMision(data) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/mision\", {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(data),\r\n        });\r\n        if (response.ok) {\r\n          this.fetchMisiones();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async updateMision(data) {\r\n      try {\r\n        const response = await fetch(`http://localhost:5056/api/mision/${data.codigo}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(data),\r\n        });\r\n        if (response.ok) {\r\n          this.fetchMisiones();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async deleteMision(codigo) {\r\n      try {\r\n        const response = await fetch(`http://localhost:5056/api/mision/${codigo}`, {\r\n          method: 'DELETE',\r\n        });\r\n        if (response.ok) {\r\n          this.fetchMisiones();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}