{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport OperativosList from './OperativosList.vue';\nimport MisionesList from './MisionesList.vue';\nimport EquiposList from './EquiposList.vue';\nimport CrudForm from './CrudForm.vue';\nexport default {\n  name: \"MainList\",\n  components: {\n    OperativosList,\n    MisionesList,\n    EquiposList,\n    CrudForm\n  },\n  setup() {\n    const operativos = ref([]);\n    const misiones = ref([]);\n    const equipos = ref([]);\n    const selectedItem = ref(null); // Estado para almacenar el ítem seleccionado\n\n    // Función para filtrar y mapear las misiones con sus operativos\n    const misionesFiltradas = computed(() => {\n      return operativos.value.filter(operativo => operativo.misiones && operativo.misiones.length > 0).flatMap(operativo => operativo.misiones.map(mision => ({\n        ...mision,\n        operativo\n      })));\n    });\n\n    // Función para obtener los operativos\n    const fetchOperativos = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\n        operativos.value = await response.json();\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    // Función para obtener las misiones\n    const fetchMisiones = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/mision\");\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\n        misiones.value = await response.json();\n\n        // Asignar las misiones al operativo correspondiente usando OperativoID\n        operativos.value.forEach(operativo => {\n          operativo.misiones = misiones.value.filter(mision => mision.operativoID === operativo.id);\n        });\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    // Función para obtener los equipos\n    const fetchEquipos = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/equipo\");\n        if (!response.ok) throw new Error(\"Error al obtener los equipos\");\n        equipos.value = await response.json();\n\n        // Asignar los equipos a la misión correspondiente usando MisionID\n        equipos.value = equipos.value.map(equipo => {\n          const mision = misiones.value.find(m => m.codigo === equipo.misionID);\n          return {\n            ...equipo,\n            mision\n          };\n        });\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    // Función para manejar la edición de un ítem\n    const editItem = item => {\n      selectedItem.value = {\n        ...item,\n        tipo: item.operativoID ? 'Operativo' : item.misionCodigo ? 'Misión' : 'Equipo'\n      };\n    };\n\n    // Función que se ejecuta después de guardar datos\n    const handleDataSaved = () => {\n      selectedItem.value = null; // Limpiar el ítem seleccionado después de guardar\n      fetchOperativos();\n      fetchMisiones();\n      fetchEquipos();\n    };\n\n    // Llamar a las funciones fetch cuando el componente se monta\n    onMounted(() => {\n      fetchOperativos();\n      fetchMisiones();\n      fetchEquipos();\n    });\n    return {\n      operativos,\n      misionesFiltradas,\n      equipos,\n      selectedItem,\n      // Agregamos el estado del ítem seleccionado\n      fetchEquipos,\n      editItem,\n      // Método para editar el ítem\n      handleDataSaved // Método para recargar los datos después de guardar\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","OperativosList","MisionesList","EquiposList","CrudForm","name","components","setup","operativos","misiones","equipos","selectedItem","misionesFiltradas","value","filter","operativo","length","flatMap","map","mision","fetchOperativos","response","fetch","ok","Error","json","error","console","fetchMisiones","forEach","operativoID","id","fetchEquipos","equipo","find","m","codigo","misionID","editItem","item","tipo","misionCodigo","handleDataSaved"],"sources":["E:\\SmartWay\\Operacion_ByteStorm\\OperacionFrontEnd2\\bytestormfrontend\\src\\components\\MainList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>OPERACIÓN BYTESTORM</h1>\r\n\r\n    <!-- Componente CRUD para agregar o editar datos -->\r\n    <CrudForm\r\n      :initialData=\"selectedItem\"\r\n      @data-saved=\"handleDataSaved\"\r\n    />\r\n\r\n    <h2>Lista de Operativos</h2>\r\n    <OperativosList\r\n      :operativos=\"operativos\"\r\n      @edit=\"editItem\"\r\n    />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <h2>Lista de Misiones</h2>\r\n    <MisionesList\r\n      :misiones=\"misionesFiltradas\"\r\n      @edit=\"editItem\"\r\n    />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <h2>Lista de Equipos</h2>\r\n    <EquiposList\r\n      :equipos=\"equipos\"\r\n      @edit=\"editItem\"\r\n    />\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport OperativosList from './OperativosList.vue';\r\nimport MisionesList from './MisionesList.vue';\r\nimport EquiposList from './EquiposList.vue';\r\nimport CrudForm from './CrudForm.vue';\r\n\r\nexport default {\r\n  name: \"MainList\",\r\n  components: {\r\n    OperativosList,\r\n    MisionesList,\r\n    EquiposList,\r\n    CrudForm\r\n  },\r\n  setup() {\r\n    const operativos = ref([]);\r\n    const misiones = ref([]);\r\n    const equipos = ref([]);\r\n    const selectedItem = ref(null); // Estado para almacenar el ítem seleccionado\r\n\r\n    // Función para filtrar y mapear las misiones con sus operativos\r\n    const misionesFiltradas = computed(() => {\r\n      return operativos.value\r\n        .filter((operativo) => operativo.misiones && operativo.misiones.length > 0)\r\n        .flatMap((operativo) =>\r\n          operativo.misiones.map((mision) => ({\r\n            ...mision,\r\n            operativo,\r\n          }))\r\n        );\r\n    });\r\n\r\n    // Función para obtener los operativos\r\n    const fetchOperativos = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\r\n        operativos.value = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    // Función para obtener las misiones\r\n    const fetchMisiones = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/mision\");\r\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\r\n        misiones.value = await response.json();\r\n\r\n        // Asignar las misiones al operativo correspondiente usando OperativoID\r\n        operativos.value.forEach((operativo) => {\r\n          operativo.misiones = misiones.value.filter((mision) => mision.operativoID === operativo.id);\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    // Función para obtener los equipos\r\n    const fetchEquipos = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/equipo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los equipos\");\r\n        equipos.value = await response.json();\r\n\r\n        // Asignar los equipos a la misión correspondiente usando MisionID\r\n        equipos.value = equipos.value.map((equipo) => {\r\n          const mision = misiones.value.find((m) => m.codigo === equipo.misionID);\r\n          return { ...equipo, mision };\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    // Función para manejar la edición de un ítem\r\n    const editItem = (item) => {\r\n      selectedItem.value = { ...item, tipo: item.operativoID ? 'Operativo' : item.misionCodigo ? 'Misión' : 'Equipo' };\r\n    };\r\n\r\n    // Función que se ejecuta después de guardar datos\r\n    const handleDataSaved = () => {\r\n      selectedItem.value = null; // Limpiar el ítem seleccionado después de guardar\r\n      fetchOperativos();\r\n      fetchMisiones();\r\n      fetchEquipos();\r\n    };\r\n\r\n    // Llamar a las funciones fetch cuando el componente se monta\r\n    onMounted(() => {\r\n      fetchOperativos();\r\n      fetchMisiones();\r\n      fetchEquipos();\r\n    });\r\n\r\n    return {\r\n      operativos,\r\n      misionesFiltradas,\r\n      equipos,\r\n      selectedItem, // Agregamos el estado del ítem seleccionado\r\n      fetchEquipos,\r\n      editItem, // Método para editar el ítem\r\n      handleDataSaved, // Método para recargar los datos después de guardar\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Puedes añadir estilos aquí si es necesario */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}