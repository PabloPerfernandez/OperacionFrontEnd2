{"ast":null,"code":"export default {\n  props: {\n    equipoSeleccionado: {\n      type: Object,\n      default: null\n    },\n    operativoSeleccionado: {\n      type: Object,\n      default: null\n    },\n    misionSeleccionada: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    return {\n      formData: {\n        tipo: '',\n        // 'Operativo', 'Misión', 'Equipo'\n        operativoID: '',\n        nombre: '',\n        rol: '',\n        misionAsignada: '',\n        misionCodigo: '',\n        equipoID: '',\n        descripcion: ''\n      },\n      misiones: [] // Aquí puedes cargar las misiones disponibles\n    };\n  },\n  watch: {\n    equipoSeleccionado: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.formData = {\n            tipo: 'Equipo',\n            equipoID: newVal.equipoID || '',\n            // Asegurarse de que existe\n            nombre: newVal.nombre || '',\n            descripcion: newVal.descripcion || '',\n            rol: '',\n            misionAsignada: '',\n            operativoID: '',\n            misionCodigo: ''\n          };\n        }\n      }\n    },\n    operativoSeleccionado: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.formData = {\n            tipo: 'Operativo',\n            operativoID: newVal.operativoID || '',\n            // Asegurarse de que existe\n            nombre: newVal.nombre || '',\n            rol: newVal.rol || '',\n            misionAsignada: newVal.misionAsignada || '',\n            equipoID: '',\n            misionCodigo: '',\n            descripcion: ''\n          };\n        }\n      }\n    },\n    misionSeleccionada: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.formData = {\n            tipo: 'Misión',\n            misionCodigo: newVal.misionCodigo || '',\n            // Asegurarse de que existe\n            nombre: newVal.nombre || '',\n            descripcion: newVal.descripcion || '',\n            rol: '',\n            misionAsignada: '',\n            equipoID: '',\n            operativoID: ''\n          };\n        }\n      }\n    }\n  },\n  methods: {\n    async submitForm() {\n      try {\n        let apiUrl = '';\n        let method = 'POST';\n        if (this.formData.tipo === 'Operativo') {\n          if (this.operativoSeleccionado) {\n            apiUrl = `http://localhost:5056/api/operativo/${this.operativoSeleccionado.operativoID}`;\n            method = 'PUT';\n          } else {\n            apiUrl = 'http://localhost:5056/api/operativo/crear';\n          }\n        } else if (this.formData.tipo === 'Misión') {\n          if (this.misionSeleccionada) {\n            apiUrl = `http://localhost:5056/api/mision/${this.misionSeleccionada.misionCodigo}`;\n            method = 'PUT';\n          } else {\n            apiUrl = 'http://localhost:5056/api/mision/crear';\n          }\n        } else if (this.formData.tipo === 'Equipo') {\n          if (this.equipoSeleccionado) {\n            apiUrl = `http://localhost:5056/api/equipo/${this.equipoSeleccionado.equipoID}`;\n            method = 'PUT';\n          } else {\n            apiUrl = 'http://localhost:5056/api/equipo/crear';\n          }\n        }\n        const response = await fetch(apiUrl, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nombre: this.formData.nombre,\n            descripcion: this.formData.descripcion,\n            ...(this.formData.tipo === 'Operativo' && {\n              operativoID: this.formData.operativoID,\n              rol: this.formData.rol,\n              misionAsignada: this.formData.misionAsignada\n            }),\n            ...(this.formData.tipo === 'Misión' && {\n              misionCodigo: this.formData.misionCodigo\n            }),\n            ...(this.formData.tipo === 'Equipo' && {\n              equipoID: this.formData.equipoID\n            })\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Error al guardar los datos');\n        }\n        this.$emit('data-saved');\n        this.resetForm();\n      } catch (error) {\n        console.error('Error al guardar los datos:', error);\n      }\n    },\n    resetForm() {\n      this.formData = {\n        tipo: '',\n        operativoID: '',\n        nombre: '',\n        rol: '',\n        misionAsignada: '',\n        misionCodigo: '',\n        equipoID: '',\n        descripcion: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["props","equipoSeleccionado","type","Object","default","operativoSeleccionado","misionSeleccionada","data","formData","tipo","operativoID","nombre","rol","misionAsignada","misionCodigo","equipoID","descripcion","misiones","watch","immediate","handler","newVal","methods","submitForm","apiUrl","method","response","fetch","headers","body","JSON","stringify","ok","Error","$emit","resetForm","error","console"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\CrudForm.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-form @submit.prevent=\"submitForm\">\r\n      <!-- Selector de tipo de entrada -->\r\n      <v-select\r\n        v-model=\"formData.tipo\"\r\n        :items=\"['Operativo', 'Misión', 'Equipo']\"\r\n        label=\"Tipo de Entrada\"\r\n        required\r\n      ></v-select>\r\n\r\n      <!-- Campos específicos para Operativo -->\r\n      <template v-if=\"formData.tipo === 'Operativo'\">\r\n        <v-text-field\r\n          v-model=\"formData.operativoID\"\r\n          label=\"ID del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.rol\"\r\n          label=\"Rol del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-select\r\n          v-model=\"formData.misionAsignada\"\r\n          :items=\"misiones\"\r\n          label=\"Misión Asignada\"\r\n          required\r\n        ></v-select>\r\n      </template>\r\n\r\n      <!-- Campos específicos para Misión -->\r\n      <template v-if=\"formData.tipo === 'Misión'\">\r\n        <v-text-field\r\n          v-model=\"formData.misionCodigo\"\r\n          label=\"Código de Misión\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre de la Misión\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-textarea\r\n          v-model=\"formData.descripcion\"\r\n          label=\"Descripción de la Misión\"\r\n        ></v-textarea>\r\n      </template>\r\n\r\n      <!-- Campos específicos para Equipo -->\r\n      <template v-if=\"formData.tipo === 'Equipo'\">\r\n        <v-text-field\r\n          v-model=\"formData.equipoID\"\r\n          label=\"ID del Equipo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre del Equipo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-textarea\r\n          v-model=\"formData.descripcion\"\r\n          label=\"Descripción del Equipo\"\r\n        ></v-textarea>\r\n      </template>\r\n\r\n      <!-- Botón de enviar -->\r\n      <v-btn type=\"submit\" color=\"primary\">\r\n        {{ equipoSeleccionado || operativoSeleccionado || misionSeleccionada ? 'Actualizar' : 'Guardar' }}\r\n      </v-btn>\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    equipoSeleccionado: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    operativoSeleccionado: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    misionSeleccionada: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      formData: {\r\n        tipo: '', // 'Operativo', 'Misión', 'Equipo'\r\n        operativoID: '',\r\n        nombre: '',\r\n        rol: '',\r\n        misionAsignada: '',\r\n        misionCodigo: '',\r\n        equipoID: '',\r\n        descripcion: ''\r\n      },\r\n      misiones: [] // Aquí puedes cargar las misiones disponibles\r\n    };\r\n  },\r\n  watch: {\r\n    equipoSeleccionado: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.formData = {\r\n            tipo: 'Equipo',\r\n            equipoID: newVal.equipoID || '', // Asegurarse de que existe\r\n            nombre: newVal.nombre || '',\r\n            descripcion: newVal.descripcion || '',\r\n            rol: '',\r\n            misionAsignada: '',\r\n            operativoID: '',\r\n            misionCodigo: ''\r\n          };\r\n        }\r\n      }\r\n    },\r\n    operativoSeleccionado: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.formData = {\r\n            tipo: 'Operativo',\r\n            operativoID: newVal.operativoID || '', // Asegurarse de que existe\r\n            nombre: newVal.nombre || '',\r\n            rol: newVal.rol || '',\r\n            misionAsignada: newVal.misionAsignada || '',\r\n            equipoID: '',\r\n            misionCodigo: '',\r\n            descripcion: ''\r\n          };\r\n        }\r\n      }\r\n    },\r\n    misionSeleccionada: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.formData = {\r\n            tipo: 'Misión',\r\n            misionCodigo: newVal.misionCodigo || '', // Asegurarse de que existe\r\n            nombre: newVal.nombre || '',\r\n            descripcion: newVal.descripcion || '',\r\n            rol: '',\r\n            misionAsignada: '',\r\n            equipoID: '',\r\n            operativoID: ''\r\n          };\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        let apiUrl = '';\r\n        let method = 'POST';\r\n\r\n        if (this.formData.tipo === 'Operativo') {\r\n          if (this.operativoSeleccionado) {\r\n            apiUrl = `http://localhost:5056/api/operativo/${this.operativoSeleccionado.operativoID}`;\r\n            method = 'PUT';\r\n          } else {\r\n            apiUrl = 'http://localhost:5056/api/operativo/crear';\r\n          }\r\n        } else if (this.formData.tipo === 'Misión') {\r\n          if (this.misionSeleccionada) {\r\n            apiUrl = `http://localhost:5056/api/mision/${this.misionSeleccionada.misionCodigo}`;\r\n            method = 'PUT';\r\n          } else {\r\n            apiUrl = 'http://localhost:5056/api/mision/crear';\r\n          }\r\n        } else if (this.formData.tipo === 'Equipo') {\r\n          if (this.equipoSeleccionado) {\r\n            apiUrl = `http://localhost:5056/api/equipo/${this.equipoSeleccionado.equipoID}`;\r\n            method = 'PUT';\r\n          } else {\r\n            apiUrl = 'http://localhost:5056/api/equipo/crear';\r\n          }\r\n        }\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: method,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            nombre: this.formData.nombre,\r\n            descripcion: this.formData.descripcion,\r\n            ...(this.formData.tipo === 'Operativo' && {\r\n              operativoID: this.formData.operativoID,\r\n              rol: this.formData.rol,\r\n              misionAsignada: this.formData.misionAsignada\r\n            }),\r\n            ...(this.formData.tipo === 'Misión' && {\r\n              misionCodigo: this.formData.misionCodigo\r\n            }),\r\n            ...(this.formData.tipo === 'Equipo' && {\r\n              equipoID: this.formData.equipoID\r\n            })\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error al guardar los datos');\r\n        }\r\n\r\n        this.$emit('data-saved');\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error('Error al guardar los datos:', error);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.formData = {\r\n        tipo: '',\r\n        operativoID: '',\r\n        nombre: '',\r\n        rol: '',\r\n        misionAsignada: '',\r\n        misionCodigo: '',\r\n        equipoID: '',\r\n        descripcion: ''\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}