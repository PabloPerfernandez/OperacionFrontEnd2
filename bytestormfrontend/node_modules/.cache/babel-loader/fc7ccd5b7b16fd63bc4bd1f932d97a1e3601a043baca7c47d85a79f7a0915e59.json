{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_form, {\n      onSubmit: _withModifiers($options.submitForm, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_text_field, {\n        modelValue: $data.formData.nombre,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.nombre = $event),\n        label: \"Nombre del Operativo\",\n        required: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n        modelValue: $data.formData.descripcion,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.descripcion = $event),\n        label: \"Descripción\",\n        required: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n        modelValue: $data.formData.tipo,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.tipo = $event),\n        items: ['Operativo', 'Misión', 'Equipo'],\n        label: \"Tipo de Entrada\",\n        required: \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" Campos condicionales \"), $data.formData.tipo === 'Misión' ? (_openBlock(), _createBlock(_component_v_text_field, {\n        key: 0,\n        modelValue: $data.formData.misionCodigo,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.misionCodigo = $event),\n        label: \"Código de Misión\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true), $data.formData.tipo === 'Equipo' ? (_openBlock(), _createBlock(_component_v_text_field, {\n        key: 1,\n        modelValue: $data.formData.equipoID,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.formData.equipoID = $event),\n        label: \"ID del Equipo\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n        type: \"submit\",\n        color: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Guardar\")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onSubmit\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_form","onSubmit","_withModifiers","$options","submitForm","_component_v_text_field","modelValue","$data","formData","nombre","_cache","$event","label","required","descripcion","_component_v_select","tipo","items","_createCommentVNode","key","misionCodigo","equipoID","_component_v_btn","type","color","_createTextVNode","_"],"sources":["E:\\SmartWay\\Operacion_ByteStorm\\OperacionFrontEnd2\\bytestormfrontend\\src\\components\\CrudForm.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-form @submit.prevent=\"submitForm\">\r\n      <v-text-field\r\n        v-model=\"formData.nombre\"\r\n        label=\"Nombre del Operativo\"\r\n        required\r\n      ></v-text-field>\r\n\r\n      <v-text-field\r\n        v-model=\"formData.descripcion\"\r\n        label=\"Descripción\"\r\n        required\r\n      ></v-text-field>\r\n\r\n      <v-select\r\n        v-model=\"formData.tipo\"\r\n        :items=\"['Operativo', 'Misión', 'Equipo']\"\r\n        label=\"Tipo de Entrada\"\r\n        required\r\n      ></v-select>\r\n\r\n      <!-- Campos condicionales -->\r\n      <v-text-field\r\n        v-if=\"formData.tipo === 'Misión'\"\r\n        v-model=\"formData.misionCodigo\"\r\n        label=\"Código de Misión\"\r\n      ></v-text-field>\r\n\r\n      <v-text-field\r\n        v-if=\"formData.tipo === 'Equipo'\"\r\n        v-model=\"formData.equipoID\"\r\n        label=\"ID del Equipo\"\r\n      ></v-text-field>\r\n\r\n      <v-btn type=\"submit\" color=\"primary\">Guardar</v-btn>\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        nombre: '',\r\n        descripcion: '',\r\n        tipo: '',\r\n        misionCodigo: '',\r\n        equipoID: '',\r\n        // Nota: no incluir un campo 'id' a menos que sea necesario\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        let apiUrl = '';\r\n\r\n        if (this.formData.tipo === 'Operativo') {\r\n          apiUrl = 'http://localhost:5056/api/operativo/crear';\r\n        } else if (this.formData.tipo === 'Misión') {\r\n          apiUrl = 'http://localhost:5056/api/mision/crear';\r\n        } else if (this.formData.tipo === 'Equipo') {\r\n          apiUrl = 'http://localhost:5056/api/equipo/crear';\r\n        }\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            nombre: this.formData.nombre,\r\n            descripcion: this.formData.descripcion,\r\n            // Solo enviar campos relevantes\r\n            ...(this.formData.tipo === 'Misión' && { misionCodigo: this.formData.misionCodigo }),\r\n            ...(this.formData.tipo === 'Equipo' && { equipoID: this.formData.equipoID }),\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error al guardar los datos');\r\n        }\r\n\r\n        this.$emit('data-saved');\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error('Error al guardar los datos:', error);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.formData = {\r\n        nombre: '',\r\n        descripcion: '',\r\n        tipo: '',\r\n        misionCodigo: '',\r\n        equipoID: '',\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";;;;;;;uBACEA,YAAA,CAoCcC,sBAAA;IArChBC,OAAA,EAAAC,QAAA,CAEI,MAkCS,CAlCTC,YAAA,CAkCSC,iBAAA;MAlCAC,QAAM,EAFnBC,cAAA,CAE6BC,QAAA,CAAAC,UAAU;;MAFvCP,OAAA,EAAAC,QAAA,CAGM,MAIgB,CAJhBC,YAAA,CAIgBM,uBAAA;QAPtBC,UAAA,EAIiBC,KAAA,CAAAC,QAAQ,CAACC,MAAM;QAJhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIiBJ,KAAA,CAAAC,QAAQ,CAACC,MAAM,GAAAE,MAAA;QACxBC,KAAK,EAAC,sBAAsB;QAC5BC,QAAQ,EAAR;+CAGFd,YAAA,CAIgBM,uBAAA;QAbtBC,UAAA,EAUiBC,KAAA,CAAAC,QAAQ,CAACM,WAAW;QAVrC,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUiBJ,KAAA,CAAAC,QAAQ,CAACM,WAAW,GAAAH,MAAA;QAC7BC,KAAK,EAAC,aAAa;QACnBC,QAAQ,EAAR;+CAGFd,YAAA,CAKYgB,mBAAA;QApBlBT,UAAA,EAgBiBC,KAAA,CAAAC,QAAQ,CAACQ,IAAI;QAhB9B,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBiBJ,KAAA,CAAAC,QAAQ,CAACQ,IAAI,GAAAL,MAAA;QACrBM,KAAK,EAAE,iCAAiC;QACzCL,KAAK,EAAC,iBAAiB;QACvBC,QAAQ,EAAR;+CAGFK,mBAAA,0BAA6B,EAErBX,KAAA,CAAAC,QAAQ,CAACQ,IAAI,iB,cADrBrB,YAAA,CAIgBU,uBAAA;QA3BtBc,GAAA;QAAAb,UAAA,EAyBiBC,KAAA,CAAAC,QAAQ,CAACY,YAAY;QAzBtC,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyBiBJ,KAAA,CAAAC,QAAQ,CAACY,YAAY,GAAAT,MAAA;QAC9BC,KAAK,EAAC;iDA1BdM,mBAAA,gBA8BcX,KAAA,CAAAC,QAAQ,CAACQ,IAAI,iB,cADrBrB,YAAA,CAIgBU,uBAAA;QAjCtBc,GAAA;QAAAb,UAAA,EA+BiBC,KAAA,CAAAC,QAAQ,CAACa,QAAQ;QA/BlC,uBAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA+BiBJ,KAAA,CAAAC,QAAQ,CAACa,QAAQ,GAAAV,MAAA;QAC1BC,KAAK,EAAC;iDAhCdM,mBAAA,gBAmCMnB,YAAA,CAAoDuB,gBAAA;QAA7CC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;QAnCjC3B,OAAA,EAAAC,QAAA,CAmC2C,MAAO,CAnClD2B,gBAAA,CAmC2C,SAAO,E;QAnClDC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}