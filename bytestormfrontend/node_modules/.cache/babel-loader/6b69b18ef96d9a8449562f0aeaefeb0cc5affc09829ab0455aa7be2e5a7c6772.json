{"ast":null,"code":"export default {\n  name: \"CrudForm\",\n  data() {\n    return {\n      formData: {\n        tipo: '',\n        nombre: '',\n        rol: '',\n        misionAsignada: '',\n        misionCodigo: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        let apiUrl = '';\n        if (this.formData.tipo === 'Operativo') {\n          apiUrl = 'http://localhost:5056/api/operativo/crear';\n        } else if (this.formData.tipo === 'Misión') {\n          apiUrl = 'http://localhost:5056/api/mision/crear';\n        } else if (this.formData.tipo === 'Equipo') {\n          apiUrl = 'http://localhost:5056/api/equipo/crear';\n        }\n\n        // Preparar los datos sin incluir el ID\n        const body = {\n          nombre: this.formData.nombre,\n          ...(this.formData.tipo === 'Operativo' && {\n            rol: this.formData.rol,\n            misionAsignada: this.formData.misionAsignada\n          }),\n          ...(this.formData.tipo === 'Misión' && {\n            misionCodigo: this.formData.misionCodigo\n          }),\n          ...(this.formData.tipo === 'Equipo' && {\n            nombre: this.formData.nombre\n          })\n        };\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        if (!response.ok) {\n          throw new Error('Error al guardar los datos');\n        }\n        this.$emit('data-saved'); // Emitir evento cuando los datos se han guardado\n        this.resetForm(); // Limpiar el formulario\n      } catch (error) {\n        console.error('Error al guardar los datos:', error);\n      }\n    },\n    resetForm() {\n      this.formData = {\n        tipo: '',\n        nombre: '',\n        rol: '',\n        misionAsignada: '',\n        misionCodigo: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","formData","tipo","nombre","rol","misionAsignada","misionCodigo","methods","submitForm","apiUrl","body","response","fetch","method","headers","JSON","stringify","ok","Error","$emit","resetForm","error","console"],"sources":["E:\\SmartWay\\Operacion_ByteStorm\\OperacionFrontEnd2\\bytestormfrontend\\src\\components\\CrudForm.vue"],"sourcesContent":["<template>\r\n  <v-form @submit.prevent=\"submitForm\">\r\n    <v-select\r\n      v-model=\"formData.tipo\"\r\n      :items=\"['Operativo', 'Misión', 'Equipo']\"\r\n      label=\"Tipo\"\r\n      required\r\n    ></v-select>\r\n\r\n    <v-text-field\r\n      v-model=\"formData.nombre\"\r\n      label=\"Nombre\"\r\n      required\r\n    ></v-text-field>\r\n\r\n    <v-text-field\r\n      v-if=\"formData.tipo === 'Operativo'\"\r\n      v-model=\"formData.rol\"\r\n      label=\"Rol\"\r\n    ></v-text-field>\r\n\r\n    <v-text-field\r\n      v-if=\"formData.tipo === 'Operativo'\"\r\n      v-model=\"formData.misionAsignada\"\r\n      label=\"Misión Asignada\"\r\n    ></v-text-field>\r\n\r\n    <v-text-field\r\n      v-if=\"formData.tipo === 'Misión'\"\r\n      v-model=\"formData.misionCodigo\"\r\n      label=\"Código de la Misión\"\r\n    ></v-text-field>\r\n\r\n    <v-btn type=\"submit\" color=\"primary\">Guardar</v-btn>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CrudForm\",\r\n  data() {\r\n    return {\r\n      formData: {\r\n        tipo: '',\r\n        nombre: '',\r\n        rol: '',\r\n        misionAsignada: '',\r\n        misionCodigo: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      try {\r\n        let apiUrl = '';\r\n\r\n        if (this.formData.tipo === 'Operativo') {\r\n          apiUrl = 'http://localhost:5056/api/operativo/crear';\r\n        } else if (this.formData.tipo === 'Misión') {\r\n          apiUrl = 'http://localhost:5056/api/mision/crear';\r\n        } else if (this.formData.tipo === 'Equipo') {\r\n          apiUrl = 'http://localhost:5056/api/equipo/crear';\r\n        }\r\n\r\n        // Preparar los datos sin incluir el ID\r\n        const body = {\r\n          nombre: this.formData.nombre,\r\n          ...(this.formData.tipo === 'Operativo' && {\r\n            rol: this.formData.rol,\r\n            misionAsignada: this.formData.misionAsignada,\r\n          }),\r\n          ...(this.formData.tipo === 'Misión' && {\r\n            misionCodigo: this.formData.misionCodigo,\r\n          }),\r\n          ...(this.formData.tipo === 'Equipo' && {\r\n            nombre: this.formData.nombre,\r\n          }),\r\n        };\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error al guardar los datos');\r\n        }\r\n\r\n        this.$emit('data-saved'); // Emitir evento cuando los datos se han guardado\r\n        this.resetForm(); // Limpiar el formulario\r\n      } catch (error) {\r\n        console.error('Error al guardar los datos:', error);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.formData = {\r\n        tipo: '',\r\n        nombre: '',\r\n        rol: '',\r\n        misionAsignada: '',\r\n        misionCodigo: ''\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAsCA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,GAAG,EAAE,EAAE;QACPC,cAAc,EAAE,EAAE;QAClBC,YAAY,EAAE;MAChB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,IAAIC,MAAK,GAAI,EAAE;QAEf,IAAI,IAAI,CAACR,QAAQ,CAACC,IAAG,KAAM,WAAW,EAAE;UACtCO,MAAK,GAAI,2CAA2C;QACtD,OAAO,IAAI,IAAI,CAACR,QAAQ,CAACC,IAAG,KAAM,QAAQ,EAAE;UAC1CO,MAAK,GAAI,wCAAwC;QACnD,OAAO,IAAI,IAAI,CAACR,QAAQ,CAACC,IAAG,KAAM,QAAQ,EAAE;UAC1CO,MAAK,GAAI,wCAAwC;QACnD;;QAEA;QACA,MAAMC,IAAG,GAAI;UACXP,MAAM,EAAE,IAAI,CAACF,QAAQ,CAACE,MAAM;UAC5B,IAAI,IAAI,CAACF,QAAQ,CAACC,IAAG,KAAM,WAAU,IAAK;YACxCE,GAAG,EAAE,IAAI,CAACH,QAAQ,CAACG,GAAG;YACtBC,cAAc,EAAE,IAAI,CAACJ,QAAQ,CAACI;UAChC,CAAC,CAAC;UACF,IAAI,IAAI,CAACJ,QAAQ,CAACC,IAAG,KAAM,QAAO,IAAK;YACrCI,YAAY,EAAE,IAAI,CAACL,QAAQ,CAACK;UAC9B,CAAC,CAAC;UACF,IAAI,IAAI,CAACL,QAAQ,CAACC,IAAG,KAAM,QAAO,IAAK;YACrCC,MAAM,EAAE,IAAI,CAACF,QAAQ,CAACE;UACxB,CAAC;QACH,CAAC;QAED,MAAMQ,QAAO,GAAI,MAAMC,KAAK,CAACH,MAAM,EAAE;UACnCI,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;QAC3B,CAAC,CAAC;QAEF,IAAI,CAACC,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QAEA,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC,EAAE;QAC1B,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE;MACpB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDD,SAASA,CAAA,EAAG;MACV,IAAI,CAACnB,QAAO,GAAI;QACdC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,GAAG,EAAE,EAAE;QACPC,cAAc,EAAE,EAAE;QAClBC,YAAY,EAAE;MAChB,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}