{"ast":null,"code":"export default {\n  name: 'CrudForm',\n  data() {\n    return {\n      formData: {\n        nombre: '',\n        descripcion: '',\n        tipo: ''\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      // Verifica si todos los campos obligatorios están completos\n      if (!this.formData.nombre || !this.formData.descripcion || !this.formData.tipo) {\n        console.error('Todos los campos son obligatorios');\n        return;\n      }\n      try {\n        // Usar window.location.origin para asegurar que la URL del servidor es correcta\n        const apiUrl = `${window.location.origin}/api/crear`;\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.formData) // Enviar los datos del formulario\n        });\n        if (!response.ok) {\n          throw new Error('Error al guardar los datos');\n        }\n        const result = await response.json();\n        console.log('Datos guardados correctamente:', result);\n\n        // Emitir un evento para que MainList.vue recargue los datos\n        this.$emit('data-saved');\n\n        // Reiniciar el formulario\n        this.formData = {\n          nombre: '',\n          descripcion: '',\n          tipo: ''\n        };\n      } catch (error) {\n        console.error('Error al guardar los datos:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","formData","nombre","descripcion","tipo","methods","submitForm","console","error","apiUrl","window","location","origin","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","log","$emit"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\CrudForm.vue"],"sourcesContent":["<template>\r\n  <v-card outlined>\r\n    <v-card-title>Formulario CRUD</v-card-title>\r\n    <v-card-text>\r\n      <v-form>\r\n        <!-- Campos del formulario -->\r\n        <v-text-field\r\n          v-model=\"formData.nombre\"\r\n          label=\"Nombre\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.descripcion\"\r\n          label=\"Descripción\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-select\r\n          v-model=\"formData.tipo\"\r\n          :items=\"['Operativo', 'Misión', 'Equipo']\"\r\n          label=\"Tipo\"\r\n          required\r\n        ></v-select>\r\n\r\n        <!-- Botón de envío -->\r\n        <v-btn color=\"primary\" @click=\"submitForm\">Guardar</v-btn>\r\n      </v-form>\r\n    </v-card-text>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CrudForm',\r\n  data() {\r\n    return {\r\n      formData: {\r\n        nombre: '',\r\n        descripcion: '',\r\n        tipo: '',\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      // Verifica si todos los campos obligatorios están completos\r\n      if (!this.formData.nombre || !this.formData.descripcion || !this.formData.tipo) {\r\n        console.error('Todos los campos son obligatorios');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Usar window.location.origin para asegurar que la URL del servidor es correcta\r\n        const apiUrl = `${window.location.origin}/api/crear`;\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.formData), // Enviar los datos del formulario\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Error al guardar los datos');\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log('Datos guardados correctamente:', result);\r\n\r\n        // Emitir un evento para que MainList.vue recargue los datos\r\n        this.$emit('data-saved');\r\n\r\n        // Reiniciar el formulario\r\n        this.formData = { nombre: '', descripcion: '', tipo: '' };\r\n      } catch (error) {\r\n        console.error('Error al guardar los datos:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos personalizados */\r\n</style>"],"mappings":"AAiCA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB;MACA,IAAI,CAAC,IAAI,CAACL,QAAQ,CAACC,MAAK,IAAK,CAAC,IAAI,CAACD,QAAQ,CAACE,WAAU,IAAK,CAAC,IAAI,CAACF,QAAQ,CAACG,IAAI,EAAE;QAC9EG,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;QAClD;MACF;MAEA,IAAI;QACF;QACA,MAAMC,MAAK,GAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,YAAY;QAEpD,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACL,MAAM,EAAE;UACnCM,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAClB,QAAQ,CAAC,CAAE;QACvC,CAAC,CAAC;QAEF,IAAI,CAACY,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QAEA,MAAMC,MAAK,GAAI,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACpChB,OAAO,CAACiB,GAAG,CAAC,gCAAgC,EAAEF,MAAM,CAAC;;QAErD;QACA,IAAI,CAACG,KAAK,CAAC,YAAY,CAAC;;QAExB;QACA,IAAI,CAACxB,QAAO,GAAI;UAAEC,MAAM,EAAE,EAAE;UAAEC,WAAW,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC;MAC3D,EAAE,OAAOI,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}