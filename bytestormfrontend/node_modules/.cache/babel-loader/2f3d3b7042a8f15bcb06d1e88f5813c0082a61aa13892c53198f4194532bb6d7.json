{"ast":null,"code":"import { ref, watch, defineComponent } from \"vue\";\nexport default defineComponent({\n  props: {\n    equipoSeleccionado: {\n      type: Object,\n      default: null\n    },\n    operativoSeleccionado: {\n      type: Object,\n      default: null\n    },\n    misionSeleccionada: {\n      type: Object,\n      default: null\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const formData = ref({\n      tipo: \"\",\n      id: \"\",\n      nombre: \"\",\n      rol: \"\",\n      codigo: \"\",\n      Descripcion: \"\",\n      Estado: \"\",\n      OperativoID: \"\",\n      misionAsignada: \"\",\n      equipoCodigo: \"\",\n      equipoTipo: \"\",\n      equipoDescripcion: \"\"\n    });\n    const misiones = ref([]);\n\n    // Watchers para actualizar el formData cuando cambian las selecciones\n    watch(() => props.equipoSeleccionado, newVal => {\n      if (newVal) {\n        formData.value = {\n          tipo: \"Equipo\",\n          equipoCodigo: newVal.equipoCodigo || \"\",\n          equipoTipo: newVal.equipoTipo || \"\",\n          equipoDescripcion: newVal.equipoDescripcion || \"\"\n        };\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.operativoSeleccionado, newVal => {\n      if (newVal) {\n        formData.value = {\n          tipo: \"Operativo\",\n          id: newVal.id || \"\",\n          nombre: newVal.nombre || \"\",\n          rol: newVal.rol || \"\",\n          misionAsignada: newVal.misionAsignada || \"\"\n        };\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.misionSeleccionada, newVal => {\n      if (newVal) {\n        formData.value = {\n          tipo: \"Misión\",\n          codigo: newVal.codigo || \"\",\n          Estado: newVal.Estado || \"\",\n          Descripcion: newVal.Descripcion || \"\",\n          OperativoID: newVal.OperativoID || \"\"\n        };\n      }\n    }, {\n      immediate: true\n    });\n    const submitForm = async () => {\n      try {\n        let apiUrl = \"\";\n        let method = \"POST\";\n        if (formData.value.tipo === \"Operativo\") {\n          if (props.operativoSeleccionado) {\n            apiUrl = `http://localhost:5056/api/operativo/${props.operativoSeleccionado.id}`;\n            method = \"PUT\";\n          } else {\n            apiUrl = \"http://localhost:5056/api/operativo/crear\";\n          }\n        } else if (formData.value.tipo === \"Misión\") {\n          if (props.misionSeleccionada) {\n            apiUrl = `http://localhost:5056/api/mision/${props.misionSeleccionada.codigo}`;\n            method = \"PUT\";\n          } else {\n            apiUrl = \"http://localhost:5056/api/mision/crear\";\n          }\n        } else if (formData.value.tipo === \"Equipo\") {\n          if (props.equipoSeleccionado) {\n            apiUrl = `http://localhost:5056/api/equipo/${props.equipoSeleccionado.equipoCodigo}`;\n            method = \"PUT\";\n          } else {\n            apiUrl = \"http://localhost:5056/api/equipo/crear\";\n          }\n        }\n        const response = await fetch(apiUrl, {\n          method: method,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(formData.value)\n        });\n        if (!response.ok) {\n          throw new Error(\"Error al guardar los datos\");\n        }\n        emit(\"data-saved\");\n        resetForm();\n      } catch (error) {\n        console.error(\"Error al guardar los datos:\", error);\n      }\n    };\n    const resetForm = () => {\n      formData.value = {\n        tipo: \"\",\n        id: \"\",\n        nombre: \"\",\n        rol: \"\",\n        codigo: \"\",\n        Descripcion: \"\",\n        Estado: \"\",\n        OperativoID: \"\",\n        misionAsignada: \"\",\n        equipoCodigo: \"\",\n        equipoTipo: \"\",\n        equipoDescripcion: \"\"\n      };\n    };\n    return {\n      formData,\n      misiones,\n      submitForm,\n      resetForm\n    };\n  }\n});","map":{"version":3,"names":["ref","watch","defineComponent","props","equipoSeleccionado","type","Object","default","operativoSeleccionado","misionSeleccionada","setup","emit","formData","tipo","id","nombre","rol","codigo","Descripcion","Estado","OperativoID","misionAsignada","equipoCodigo","equipoTipo","equipoDescripcion","misiones","newVal","value","immediate","submitForm","apiUrl","method","response","fetch","headers","body","JSON","stringify","ok","Error","resetForm","error","console"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\CrudForm.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-form @submit.prevent=\"submitForm\">\r\n      <v-select\r\n        v-model=\"formData.tipo\"\r\n        :items=\"['Operativo', 'Misión', 'Equipo']\"\r\n        label=\"Tipo de Entrada\"\r\n        required\r\n      ></v-select>\r\n\r\n      <!-- Campos específicos para Operativo -->\r\n      <template v-if=\"formData.tipo === 'Operativo'\">\r\n        <v-text-field\r\n          v-model=\"formData.id\"\r\n          label=\"ID del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.Nombre\"\r\n          label=\"Nombre del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.Rol\"\r\n          label=\"Rol del Operativo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-select\r\n          v-model=\"formData.misionAsignada\"\r\n          :items=\"Misiones\"\r\n          label=\"Misión Asignada\"\r\n          required\r\n        ></v-select>\r\n      </template>\r\n\r\n      <!-- Campos específicos para Misión -->\r\n      <template v-if=\"formData.tipo === 'Misión'\">\r\n        <v-text-field\r\n          v-model=\"formData.codigo\"\r\n          label=\"Código de misión\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.Descripcion\"\r\n          label=\"Descripción de la misión\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.Estado\"\r\n          label=\"Estado de la misión\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.OperativoID\"\r\n          label=\"ID del Operativo asignado a la misión\"\r\n        ></v-text-field>\r\n      </template>\r\n\r\n      <!-- Campos específicos para Equipo -->\r\n      <template v-if=\"formData.tipo === 'Equipo'\">\r\n        <v-text-field\r\n          v-model=\"formData.equipoCodigo\"\r\n          label=\"ID del Equipo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.equipoTipo\"\r\n          label=\"Tipo de Equipo\"\r\n          required\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.equipoDescripcion\"\r\n          label=\"Descripción del Equipo\"\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          v-model=\"formData.EstadoEquipo\"\r\n          label=\"Estado del Equipo\"\r\n        ></v-text-field>\r\n      </template>\r\n\r\n      <!-- Botón de enviar -->\r\n      <v-btn type=\"submit\" color=\"primary\">\r\n        {{ equipoSeleccionado || operativoSeleccionado || misionSeleccionada ? 'Actualizar' : 'Guardar' }}\r\n      </v-btn>\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    equipoSeleccionado: {\r\n      type: Object,\r\n      default: null,\r\n    },\r\n    operativoSeleccionado: {\r\n      type: Object,\r\n      default: null,\r\n    },\r\n    misionSeleccionada: {\r\n      type: Object,\r\n      default: null,\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const formData = ref({\r\n      tipo: \"\",\r\n      id: \"\",\r\n      nombre: \"\",\r\n      rol: \"\",\r\n      codigo: \"\",\r\n      Descripcion: \"\",\r\n      Estado: \"\",\r\n      OperativoID: \"\",\r\n      misionAsignada: \"\",\r\n      equipoCodigo: \"\",\r\n      equipoTipo: \"\",\r\n      equipoDescripcion: \"\",\r\n    });\r\n\r\n    const misiones = ref([]);\r\n\r\n    // Watchers para actualizar el formData cuando cambian las selecciones\r\n    watch(\r\n      () => props.equipoSeleccionado,\r\n      (newVal) => {\r\n        if (newVal) {\r\n          formData.value = {\r\n            tipo: \"Equipo\",\r\n            equipoCodigo: newVal.equipoCodigo || \"\",\r\n            equipoTipo: newVal.equipoTipo || \"\",\r\n            equipoDescripcion: newVal.equipoDescripcion || \"\",\r\n          };\r\n        }\r\n      },\r\n      { immediate: true }\r\n    );\r\n\r\n    watch(\r\n      () => props.operativoSeleccionado,\r\n      (newVal) => {\r\n        if (newVal) {\r\n          formData.value = {\r\n            tipo: \"Operativo\",\r\n            id: newVal.id || \"\",\r\n            nombre: newVal.nombre || \"\",\r\n            rol: newVal.rol || \"\",\r\n            misionAsignada: newVal.misionAsignada || \"\",\r\n          };\r\n        }\r\n      },\r\n      { immediate: true }\r\n    );\r\n\r\n    watch(\r\n      () => props.misionSeleccionada,\r\n      (newVal) => {\r\n        if (newVal) {\r\n          formData.value = {\r\n            tipo: \"Misión\",\r\n            codigo: newVal.codigo || \"\",\r\n            Estado: newVal.Estado || \"\",\r\n            Descripcion: newVal.Descripcion || \"\",\r\n            OperativoID: newVal.OperativoID || \"\",\r\n          };\r\n        }\r\n      },\r\n      { immediate: true }\r\n    );\r\n\r\n    const submitForm = async () => {\r\n      try {\r\n        let apiUrl = \"\";\r\n        let method = \"POST\";\r\n\r\n        if (formData.value.tipo === \"Operativo\") {\r\n          if (props.operativoSeleccionado) {\r\n            apiUrl = `http://localhost:5056/api/operativo/${props.operativoSeleccionado.id}`;\r\n            method = \"PUT\";\r\n          } else {\r\n            apiUrl = \"http://localhost:5056/api/operativo/crear\";\r\n          }\r\n        } else if (formData.value.tipo === \"Misión\") {\r\n          if (props.misionSeleccionada) {\r\n            apiUrl = `http://localhost:5056/api/mision/${props.misionSeleccionada.codigo}`;\r\n            method = \"PUT\";\r\n          } else {\r\n            apiUrl = \"http://localhost:5056/api/mision/crear\";\r\n          }\r\n        } else if (formData.value.tipo === \"Equipo\") {\r\n          if (props.equipoSeleccionado) {\r\n            apiUrl = `http://localhost:5056/api/equipo/${props.equipoSeleccionado.equipoCodigo}`;\r\n            method = \"PUT\";\r\n          } else {\r\n            apiUrl = \"http://localhost:5056/api/equipo/crear\";\r\n          }\r\n        }\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData.value),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Error al guardar los datos\");\r\n        }\r\n\r\n        emit(\"data-saved\");\r\n        resetForm();\r\n      } catch (error) {\r\n        console.error(\"Error al guardar los datos:\", error);\r\n      }\r\n    };\r\n\r\n    const resetForm = () => {\r\n      formData.value = {\r\n        tipo: \"\",\r\n        id: \"\",\r\n        nombre: \"\",\r\n        rol: \"\",\r\n        codigo: \"\",\r\n        Descripcion: \"\",\r\n        Estado: \"\",\r\n        OperativoID: \"\",\r\n        misionAsignada: \"\",\r\n        equipoCodigo: \"\",\r\n        equipoTipo: \"\",\r\n        equipoDescripcion: \"\",\r\n      };\r\n    };\r\n\r\n    return {\r\n      formData,\r\n      misiones,\r\n      submitForm,\r\n      resetForm,\r\n    };\r\n  },\r\n});\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}