{"ast":null,"code":"import Operativos from './Operativos.vue';\nimport Misiones from './Misiones.vue';\nimport Equipos from './Equipos.vue';\nexport default {\n  name: 'OperativoList',\n  components: {\n    Operativos,\n    Misiones,\n    Equipos\n  },\n  data() {\n    return {\n      operativos: [],\n      misiones: [],\n      equipos: []\n    };\n  },\n  computed: {\n    misionesFiltradas() {\n      return this.operativos.filter(operativo => operativo.misiones && operativo.misiones.length > 0).map(operativo => {\n        return operativo.misiones.map(mision => ({\n          ...mision,\n          operativo\n        }));\n      }).flat();\n    },\n    equiposFiltrados() {\n      return this.equipos.filter(equipo => equipo.mision != null);\n    }\n  },\n  mounted() {\n    this.fetchOperativos();\n    this.fetchMisiones();\n    this.fetchEquipos();\n  },\n  methods: {\n    async fetchOperativos() {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\n        this.operativos = await response.json();\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    async fetchMisiones() {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/mision\");\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\n        this.misiones = await response.json();\n\n        // Asignar las misiones al operativo correspondiente usando OperativoID\n        this.operativos.forEach(operativo => {\n          operativo.misiones = this.misiones.filter(mision => mision.operativoID === operativo.id);\n        });\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    async fetchEquipos() {\n      try {\n        const response = await fetch(\"http://localhost:5056/api/equipo\");\n        if (!response.ok) throw new Error(\"Error al obtener los equipos\");\n        const equipos = await response.json();\n\n        // Asignar los equipos a la misión correspondiente usando MisionID\n        this.equipos = equipos.map(equipo => {\n          const mision = this.misiones.find(m => m.codigo === equipo.misionID);\n          return {\n            ...equipo,\n            mision\n          };\n        });\n\n        // Asignar equipos a las misiones correspondientes\n        this.operativos.forEach(operativo => {\n          operativo.misiones.forEach(mision => {\n            mision.equipos = this.equipos.filter(equipo => equipo.misionID === mision.codigo);\n          });\n        });\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Operativos","Misiones","Equipos","name","components","data","operativos","misiones","equipos","computed","misionesFiltradas","filter","operativo","length","map","mision","flat","equiposFiltrados","equipo","mounted","fetchOperativos","fetchMisiones","fetchEquipos","methods","response","fetch","ok","Error","json","error","console","forEach","operativoID","id","find","m","codigo","misionID"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\OperativoList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>OPERACIÓN BYTESTORM</h1>\r\n\r\n    <Operativos :operativos=\"operativos\" />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <Misiones :misiones=\"misionesFiltradas\" />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <Equipos :equipos=\"equiposFiltrados\" />\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport Operativos from './Operativos.vue';\r\nimport Misiones from './Misiones.vue';\r\nimport Equipos from './Equipos.vue';\r\n\r\nexport default {\r\n  name: 'OperativoList',\r\n  components: {\r\n    Operativos,\r\n    Misiones,\r\n    Equipos,\r\n  },\r\n  data() {\r\n    return {\r\n      operativos: [],\r\n      misiones: [],\r\n      equipos: [],\r\n    };\r\n  },\r\n  computed: {\r\n    misionesFiltradas() {\r\n      return this.operativos\r\n        .filter((operativo) => operativo.misiones && operativo.misiones.length > 0)\r\n        .map((operativo) => {\r\n          return operativo.misiones.map((mision) => ({\r\n            ...mision,\r\n            operativo,\r\n          }));\r\n        })\r\n        .flat();\r\n    },\r\n    equiposFiltrados() {\r\n      return this.equipos.filter((equipo) => equipo.mision != null);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchOperativos();\r\n    this.fetchMisiones();\r\n    this.fetchEquipos();\r\n  },\r\n  methods: {\r\n    async fetchOperativos() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\r\n        this.operativos = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async fetchMisiones() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/mision\");\r\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\r\n        this.misiones = await response.json();\r\n\r\n        // Asignar las misiones al operativo correspondiente usando OperativoID\r\n        this.operativos.forEach((operativo) => {\r\n          operativo.misiones = this.misiones.filter((mision) => mision.operativoID === operativo.id);\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async fetchEquipos() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/equipo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los equipos\");\r\n        const equipos = await response.json();\r\n\r\n        // Asignar los equipos a la misión correspondiente usando MisionID\r\n        this.equipos = equipos.map((equipo) => {\r\n          const mision = this.misiones.find((m) => m.codigo === equipo.misionID);\r\n          return { ...equipo, mision };\r\n        });\r\n\r\n        // Asignar equipos a las misiones correspondientes\r\n        this.operativos.forEach((operativo) => {\r\n          operativo.misiones.forEach((mision) => {\r\n            mision.equipos = this.equipos.filter((equipo) => equipo.misionID === mision.codigo);\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}