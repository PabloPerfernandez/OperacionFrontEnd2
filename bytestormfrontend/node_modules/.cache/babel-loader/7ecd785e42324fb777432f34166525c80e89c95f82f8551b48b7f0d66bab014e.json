{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-482013f8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"intro-screen\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"source\", {\n  src: \"/assets/IntroVideo.mp4\",\n  type: \"video/mp4\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Video de introducción \"), _createElementVNode(\"video\", {\n    ref: \"introVideo\",\n    autoplay: \"\",\n    controls: \"\",\n    onCanplay: _cache[0] || (_cache[0] = (...args) => $options.playVideo && $options.playVideo(...args)),\n    \"<!--\": \"\",\n    Espera: \"\",\n    a: \"\",\n    que: \"\",\n    el: \"\",\n    video: \"\",\n    esté: \"\",\n    listo: \"\",\n    para: \"\",\n    ser: \"\",\n    reproducido: \"\",\n    \"--\": \"\"\n  }, [_createTextVNode(\" class=\\\"full-screen-video\\\" > \"), _hoisted_2, _createCommentVNode(\" Mensaje de respaldo si el navegador no soporta el video \"), _createTextVNode(\" Tu navegador no soporta la reproducción de videos. \")], 544 /* NEED_HYDRATION, NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","src","type","_createElementBlock","_hoisted_1","_createCommentVNode","ref","autoplay","controls","onCanplay","_cache","args","$options","playVideo","Espera","a","que","el","video","esté","listo","para","ser","reproducido","_createTextVNode","_hoisted_2"],"sources":["E:\\SmartWay\\Operacion_ByteStorm\\OperacionFrontEnd2\\bytestormfrontend\\src\\components\\IntroScreen.vue"],"sourcesContent":["<template>\r\n  <div class=\"intro-screen\">\r\n    <!-- Video de introducción -->\r\n    <video\r\n      ref=\"introVideo\"\r\n      autoplay\r\n      controls\r\n      @canplay=\"playVideo\" <!-- Espera a que el video esté listo para ser reproducido -->\r\n      class=\"full-screen-video\"\r\n    >\r\n      <source src=\"/assets/IntroVideo.mp4\" type=\"video/mp4\" />\r\n      <!-- Mensaje de respaldo si el navegador no soporta el video -->\r\n      Tu navegador no soporta la reproducción de videos.\r\n    </video>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'IntroScreen',\r\n  methods: {\r\n    playVideo() {\r\n      const video = this.$refs.introVideo;\r\n      video.play().catch((error) => {\r\n        console.log(\"Reproducción automática bloqueada:\", error);\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    setTimeout(() => {\r\n      this.$router.push('/operativos'); // Redirige a la página de operativos después de 10 segundos\r\n    }, 10000);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.intro-screen {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #9A2B2B;\r\n}\r\n\r\n.full-screen-video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* Asegura que el video cubra toda la pantalla */\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAc;gEASrBC,mBAAA,CAAwD;EAAhDC,GAAG,EAAC,wBAAwB;EAACC,IAAI,EAAC;;;uBAT9CC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,2BAA8B,EAC9BL,mBAAA,CAUQ;IATNM,GAAG,EAAC,YAAY;IAChBC,QAAQ,EAAR,EAAQ;IACRC,QAAQ,EAAR,EAAQ;IACPC,SAAO,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAE,MAAI,EAAJ,EAAI;IAACG,MAAM,EAAN,EAAM;IAACC,CAAC,EAAD,EAAC;IAACC,GAAG,EAAH,EAAG;IAACC,EAAE,EAAF,EAAE;IAACC,KAAK,EAAL,EAAK;IAACC,IAAI,EAAJ,EAAI;IAACC,KAAK,EAAL,EAAK;IAACC,IAAI,EAAJ,EAAI;IAACC,GAAG,EAAH,EAAG;IAACC,WAAW,EAAX,EAAW;IAAC,IAAE,EAAF;MAPtFC,gBAAA,CAOyF,iCAGnF,GAAAC,UAAwD,EACxDpB,mBAAA,6DAAgE,EAXtEmB,gBAAA,CAWsE,sDAElE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}