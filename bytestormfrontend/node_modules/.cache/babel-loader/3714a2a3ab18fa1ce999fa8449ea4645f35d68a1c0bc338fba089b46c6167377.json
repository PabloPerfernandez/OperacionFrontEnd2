{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"OPERACIÓN BYTESTORM\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Operativos = _resolveComponent(\"Operativos\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_Misiones = _resolveComponent(\"Misiones\");\n  const _component_Equipos = _resolveComponent(\"Equipos\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_hoisted_1, _createVNode(_component_Operativos, {\n      operativos: $data.operativos\n    }, null, 8 /* PROPS */, [\"operativos\"]), _createVNode(_component_v_divider, {\n      class: \"my-5\"\n    }), _createVNode(_component_Misiones, {\n      misiones: $options.misionesFiltradas\n    }, null, 8 /* PROPS */, [\"misiones\"]), _createVNode(_component_v_divider, {\n      class: \"my-5\"\n    }), _createVNode(_component_Equipos, {\n      equipos: $options.equiposFiltrados\n    }, null, 8 /* PROPS */, [\"equipos\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_container","default","_withCtx","_hoisted_1","_createVNode","_component_Operativos","operativos","$data","_component_v_divider","class","_component_Misiones","misiones","$options","misionesFiltradas","_component_Equipos","equipos","equiposFiltrados","_"],"sources":["D:\\Smartway\\ByteStorm_Operacion\\bytestormoperacion\\bytestormfrontend\\src\\components\\MainList.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <h1>OPERACIÓN BYTESTORM</h1>\r\n\r\n    <Operativos :operativos=\"operativos\" />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <Misiones :misiones=\"misionesFiltradas\" />\r\n\r\n    <v-divider class=\"my-5\"></v-divider>\r\n\r\n    <Equipos :equipos=\"equiposFiltrados\" />\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport Operativos from './Operativos.vue';\r\nimport Misiones from './Misiones.vue';\r\nimport Equipos from './Equipos.vue';\r\n\r\nexport default {\r\n  name: 'OperativoList',\r\n  components: {\r\n    Operativos,\r\n    Misiones,\r\n    Equipos,\r\n  },\r\n  data() {\r\n    return {\r\n      operativos: [],\r\n      misiones: [],\r\n      equipos: [],\r\n    };\r\n  },\r\n  computed: {\r\n    misionesFiltradas() {\r\n      return this.operativos\r\n        .filter((operativo) => operativo.misiones && operativo.misiones.length > 0)\r\n        .map((operativo) => {\r\n          return operativo.misiones.map((mision) => ({\r\n            ...mision,\r\n            operativo,\r\n          }));\r\n        })\r\n        .flat();\r\n    },\r\n    equiposFiltrados() {\r\n      return this.equipos.filter((equipo) => equipo.mision != null);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchOperativos();\r\n    this.fetchMisiones();\r\n    this.fetchEquipos();\r\n  },\r\n  methods: {\r\n    async fetchOperativos() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/operativo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los operativos\");\r\n        this.operativos = await response.json();\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async fetchMisiones() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/mision\");\r\n        if (!response.ok) throw new Error(\"Error al obtener las misiones\");\r\n        this.misiones = await response.json();\r\n\r\n        // Asignar las misiones al operativo correspondiente usando OperativoID\r\n        this.operativos.forEach((operativo) => {\r\n          operativo.misiones = this.misiones.filter((mision) => mision.operativoID === operativo.id);\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    async fetchEquipos() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5056/api/equipo\");\r\n        if (!response.ok) throw new Error(\"Error al obtener los equipos\");\r\n        const equipos = await response.json();\r\n\r\n        // Asignar los equipos a la misión correspondiente usando MisionID\r\n        this.equipos = equipos.map((equipo) => {\r\n          const mision = this.misiones.find((m) => m.codigo === equipo.misionID);\r\n          return { ...equipo, mision };\r\n        });\r\n\r\n        // Asignar equipos a las misiones correspondientes\r\n        this.operativos.forEach((operativo) => {\r\n          operativo.misiones.forEach((mision) => {\r\n            mision.equipos = this.equipos.filter((equipo) => equipo.misionID === mision.codigo);\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEIA,mBAAA,CAA4B,YAAxB,qBAAmB;;;;;;;uBADzBC,YAAA,CAYcC,sBAAA;IAbhBC,OAAA,EAAAC,QAAA,CAEI,MAA4B,CAA5BC,UAA4B,EAE5BC,YAAA,CAAuCC,qBAAA;MAA1BC,UAAU,EAAEC,KAAA,CAAAD;IAAU,yCAEnCF,YAAA,CAAoCI,oBAAA;MAAzBC,KAAK,EAAC;IAAM,IAEvBL,YAAA,CAA0CM,mBAAA;MAA/BC,QAAQ,EAAEC,QAAA,CAAAC;IAAiB,uCAEtCT,YAAA,CAAoCI,oBAAA;MAAzBC,KAAK,EAAC;IAAM,IAEvBL,YAAA,CAAuCU,kBAAA;MAA7BC,OAAO,EAAEH,QAAA,CAAAI;IAAgB,qC;IAZvCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}